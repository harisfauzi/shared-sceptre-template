---
{%- import 'macros/prop_pipeline.yaml.j2' as prop_pipeline %}
Description: {{sceptre_user_data.description|default('CodePipeline Pipeline for '+sceptre_user_data.project_code)}}
AWSTemplateFormatVersion: "2010-09-09"

Resources:
{%- for pipeline in sceptre_user_data.pipelines %}{# BEGIN for pipeline in sceptre_user_data.pipelines #}
{%- set pipeline_name = pipeline.name %}
  {{ pipeline_name }}:
    Type: AWS::CodePipeline::Pipeline
    DeletionPolicy: {{ pipeline.deletion_policy | default('Delete') }}
    UpdateReplacePolicy: {{ pipeline.update_replace_policy | default('Delete') }}
    Properties:
      RoleArn: {{ pipeline.role_arn }}
      Stages:
{%- for stage in pipeline.stages %}{## BEGIN for stage in pipeline.stages #}
        - Name: {{ stage.name }}
          Actions:
{%- for action_declaration in stage.actions %}{### BEGIN for action_declaration in stage.actions #}
            - Name: {{ action_declaration.name }}
              ActionTypeId:
                Category: {{ action_declaration.action_type_id.category }}
                Owner: {{ action_declaration.action_type_id.owner }}
                Provider: {{ action_declaration.action_type_id.provider }}
                Version: {{ action_declaration.action_type_id.version }}
{%- if action_declaration.commands is defined %}{# BEGIN if action_declaration.commands is defined #}
              Commands:
{%- for item in action_declaration.commands %}
                - {{ item }}
{%- endfor %}
{%- endif %}{# END if action_declaration.commands is defined#}
{%- if action_declaration.configuration is defined %}{#### BEGIN if action_declaration.configuration is defined #}
              Configuration:
                {{ action_declaration.configuration | indent(width=16, first=False) }}
{%- endif %}{#### END if action_declaration.configuration is defined #}
{%- if action_declaration.input_artifacts is defined %}{#### BEGIN if action_declaration.input_artifacts is defined #}
              InputArtifacts:
{%- for artifact in action_declaration.input_artifacts %}{##### BEGIN for artifact in action_declaration.input_artifacts #}
                - Name: {{ artifact.name }}
{%- endfor %}{##### END for artifact in action_declaration.input_artifacts #}
{%- endif %}{#### END if action_declaration.input_artifacts is defined #}
{%- if action_declaration.namespace is defined %}{#### BEGIN if action_declaration.namespace is defined #}
              Namespace: {{ action_declaration.namespace }}
{%- endif %}{#### END if action_declaration.namespace is defined #}
{%- if action_declaration.output_artifacts is defined %}{#### BEGIN if action_declaration.output_artifacts is defined #}
              OutputArtifacts:
{%- for artifact in action_declaration.output_artifacts %}{##### BEGIN for artifact in action_declaration.output_artifacts #}
                - Name: {{ artifact.name }}
{%- endfor %}{##### END for artifact in action_declaration.output_artifacts #}
{%- endif %}{#### END if action_declaration.output_artifacts is defined #}
{%- if action_declaration.output_variables is defined %}
              OutputVariables:
{%- for item in action_declaration.output_variables %}
                - {{ item }}
{%- endfor %}
{%- endif %}
{%- if action_declaration.region is defined %}{#### BEGIN if action_declaration.region is defined #}
              Region: {{ action_declaration.region }}
{%- endif %}{#### END if action_declaration.region is defined #}
{%- if action_declaration.role_arn is defined %}{#### BEGIN if action_declaration.role_arn is defined #}
              RoleArn: {{ action_declaration.role_arn }}
{%- endif %}{#### END if action_declaration.role_arn is defined #}
{%- if action_declaration.run_order is defined %}{#### BEGIN if action_declaration.run_order is defined #}
              RunOrder: {{ action_declaration.run_order }}
{%- endif %}{#### END if action_declaration.run_order is defined #}
{%- if action_declaration.timeout_in_minutes is defined %}
              TimeoutInMinutes: {{ action_declaration.timeout_in_minutes }}
{%- endif %}
{%- endfor %}{### END for action_declaration in stage.actions #}
{%- if stage.before_entry is defined %}{# BEGIN if stage.before_entry is defined #}
          BeforeEntry:
{%- if stage.before_entry.conditions is defined %}
            {{ prop_pipeline.prep_conditions(stage.before_entry.conditions) | indent(width=12, first=False) }}
{%- endif %}
{%- endif %}{# END if stage.before_entry is defined #}
{%- if stage.blockers is defined %}{### BEGIN if stage.blockers is defined #}
          Blockers:
{%- for blocker in stage.blockers %}{#### BEGIN for blocker in stage.blockers #}
            - Name: {{ blocker.name }}
              Type: {{ blocker.type }}
{%- endfor %}{##### END for blocker in stage.blockers #}
{%- endif %}{### END if stage.blockers is defined #}
{%- if stage.on_failure is defined %}{### BEGIN if stage.on_failure is defined #}
          OnFailure:
{%- if stage.on_failure.conditions is defined %}
            {{ prop_pipeline.prep_conditions(stage.on_failure.conditions) | indent(width=12, first=False) }}
{%- endif %}
{%- if stage.on_failure.result is defined %}
            Result: {{ stage.on_failure.result }}
{%- endif %}
{%- if stage.on_failure.retry_configuration is defined %}
            RetryConfiguration:
              RetryMode: {{ stage.on_failure.retry_configuration.retry_mode}}
{%- endif %}
{%- endif %}{### END if stage.on_failure is defined #}
{%- if stage.on_success is defined %}{### BEGIN if stage.on_success is defined #}
          OnSuccess:
{%- if stage.on_success.conditions is defined %}
            {{ prop_pipeline.prep_conditions(stage.on_success.conditions) | indent(width=12, first=False) }}
{%- endif %}
{%- endif %}{### END if stage.on_success is defined #}
{%- endfor %}{## END for stage in pipeline.stages #}
{%- if pipeline.artifact_store is defined %}{## BEGIN if pipeline.artifact_store is defined #}
      {{ prop_pipeline.prep_artifact_store(pipeline.artifact_store) | indent(width=6, first=False) }}
{## {%- endif %}  END if pipeline.artifact_store is defined #}
{%- elif pipeline.artifact_stores is defined %}{## BEGIN if pipeline.artifact_stores is defined #}
      ArtifactStores:
{%- for artifact_store_map in pipeline.artifact_stores %}{### BEGIN for artifact_store_map in pipeline.artifact_stores #}
        - Region: {{ artifact_store_map.region }}
{%- if artifact_store_map.artifact_store is defined %}
          {{ prop_pipeline.prep_artifact_store(artifact_store_map.artifact_store) | indent(width=10, first=False) }}
{%- endif %}
{%- endfor %}{### END for artifact_store_map in pipeline.artifact_stores #}
{%- endif %}{## END if pipeline.artifact_stores is defined #}
{%- if pipeline.disable_inbound_stage_transitions is defined %}{## BEGIN if pipeline.disable_inbound_stage_transitions is defined #}
      DisableInboundStageTransitions:
{%- for stage_transition in pipeline.disable_inbound_stage_transitions %}{### BEGIN for stage_transition in pipeline.disable_inbound_stage_transitions #}
        - Reason: {{ stage_transition.reason }}
          StageName: {{ stage_transition.stage_name }}
{%- endfor %}{### END for stage_transition in pipeline.disable_inbound_stage_transitions #}
{%- endif %}{## END if pipeline.disable_inbound_stage_transitions is defined #}
{%- if pipeline.execution_mode is defined %}{## BEGIN if pipeline.execution_mode is defined #}
      ExecutionMode: {{ pipeline.execution_mode }}
{%- endif %}{## END if pipeline.execution_mode is defined #}
{%- if pipeline.pipeline_name is defined %}{## BEGIN if pipeline.pipeline_name is defined #}
      Name: {{ pipeline.pipeline_name }}
{%- endif %}{## END if pipeline.pipeline_name is defined #}
{%- if pipeline.pipeline_type is defined %}
      PipelineType: {{ pipeline.pipeline_type }}
{%- endif %}
{%- if pipeline.restart_execution_on_update is defined %}{## BEGIN if pipeline.restart_execution_on_update is defined #}
      RestartExecutionOnUpdate: {{ pipeline.restart_execution_on_update }}
{%- endif %}{## END if pipeline.restart_execution_on_update is defined #}
      Tags:
        - Key: SourceRepoURL
          Value: {{ sceptre_user_data.source_repo_url | default('unknown') }}
{%- if pipeline.tags is defined %}{## BEGIN if pipeline.tags is defined #}
{%- for key,value in pipeline.tags.items() %}{### BEGIN for key,value in pipeline.tags.items() #}
        - Key: {{ key }}
          Value: {{ value }}
{%- endfor %}{### END for key,value in pipeline.tags.items() #}
{%- endif %}{## END if pipeline.tags is defined #}
{%- if pipeline.triggers is defined %}{## BEGIN if pipeline.triggers is defined #}
      Triggers:
{%- for trigger in pipeline.triggers %}{### BEGIN for trigger in pipeline.triggers #}
        - ProviderType: {{trigger.provider_type}}
{%- if trigger.git_configuration is defined %}{#### BEGIN if trigger.git_configuration is defined #}
          GitConfiguration:
            SourceActionName: {{trigger.git_configuration.source_action_name}}
{%- if trigger.git_configuration.pull_request is defined %}{# BEGIN if trigger.git_configuration.pull_request is defined #}
            PullRequest:
{%- for pull_request in trigger.git_configuration.pull_request %}
              -
{%- if pull_request.branches is defined %}{## BEGIN if pull_request.branches is defined #}
                Branches:
                  {{ prop_pipeline.prep_filter_criteria(pull_request.branches) | indent(width=18, first=False) }}
{%- endif %}{## END if pull_request.branches is defined #}
{%- if pull_request.events is defined %}
                Events:
{%- for item in pull_request.events %}
                  - {{ item }}
{%- endfor %}
{%- endif %}
{%- if pull_request.file_paths is defined %}
                FilePaths:
                  {{ prop_pipeline.prep_filter_criteria(pull_request.file_paths) | indent(width=18, first=False) }}
{%- endif %}
{%- endfor %}
{%- endif %}{# END if trigger.git_configuration.pull_request is defined #}
{%- if trigger.git_configuration.push is defined %}{##### BEGIN if trigger.git_configuration.push is defined #}
            Push:
{%- for git_push_filter in trigger.git_configuration.push %}{###### BEGIN for git_push_filter in trigger.git_configuration.push #}
              -
{%- if git_push_filter.branches is defined %}
                Branches:
                  {{ prop_pipeline.prep_filter_criteria(git_push_filter.branches) | indent(width=18, first=False) }}
{%- endif %}
{%- if git_push_filter.file_paths is defined %}
                FilePaths:
                  {{ prop_pipeline.prep_filter_criteria(git_push_filter.file_paths) | ident(width=18, first=False) }}
{%- endif %}
{%- if git_push_filter.tags is defined %}
                Tags:
                  {{ prop_pipeline.prep_filter_criteria(git_push_filter.tags) | indent(width=18, first=False) }}
{%- endif %}
{%- endfor %}{###### END for git_push_filter in trigger.git_configuration.push #}
{%- endif %}{##### END if trigger.git_configuration.push is defined #}
{%- endif %}{#### END if trigger.git_configuration is defined #}
{%- endfor %}{### END for trigger in pipeline.triggers #}
{%- endif %}{## END if pipeline.triggers is defined #}
{%- if pipeline.variables is defined %}{## BEGIN if pipeline.variables is defined #}
      Variables:
{%- for pipeline_variable in pipeline.variables %}
        - Name: {{pipeline_variable.name}}
{%- if pipeline_variable.default_value is defined %}
          DefaultValue: {{pipeline_variable.default_value}}
{%- endif %}
{%- if pipeline_variable.description is defined %}
          Description: {{pipeline_variable.description}}
{%- endif %}
{%- endfor %}
{%- endif %}{## END if pipeline.variables is defined #}
{%- endfor %}{# END for pipeline in sceptre_user_data.pipelines #}

Outputs:
{%- for pipeline in sceptre_user_data.pipelines %}
{%- set pipeline_name = pipeline.name %}
  {{ pipeline_name }}:
    Description: Pipeline name for {{ pipeline_name }}
    Value:
      Ref: {{ pipeline_name }}
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}-{{ pipeline_name }}"

  {{ pipeline_name }}Version:
    Description: The Version for {{ pipeline_name }}
    Value:
      Fn::GetAtt:
        - {{ pipeline_name }}
        - Version
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}-{{ pipeline_name }}-Version"

  {{ pipeline_name }}Arn:
    Description: The ARN for {{ pipeline_name }}
    Value:
      Fn::Join:
        - ''
        - - Fn::Sub: "arn:${AWS::Partition}:codepipeline:${AWS::Region}:${AWS::AccountId}:"
          - Ref: {{ pipeline_name }}
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}-{{ pipeline_name }}-Arn"
{%- endfor %}
{#
# Supported structure as of 20250325:
Type: AWS::CodePipeline::Pipeline
Properties:
  RoleArn: String
  Stages:
    - Actions:
        - ActionTypeId:
            Category: String
            Owner: String
            Provider: String
            Version: String
          Name: String
          Commands:
            - String
          Configuration: Json
          InputArtifacts:
            - Name: String
          Namespace: String
          OutputArtifacts:
            - Name: String
              Files:
                - String
          OutputVariables:
            - String
          Region: String
          RoleArn: String
          RunOrder: Integer
          TimeoutInMinutes: Integer
      Name: String
      BeforeEntry:
        Conditions:
          -
            Result: String
            Rules:
              -
                Commands:
                  - String
                Configuration: Json
                InputArtifacts:
                  - Name: String
                Name: String
                Region: String
                RoleArn: String
                RuleTypeId:
                  Category: String
                  Owner: String
                  Provider: String
                  Version: String
      Blockers:
        - Name: String
          Type: String
      OnFailure:
        Conditions:
          - Condition
            Result: String
            Rules:
              -
                Commands:
                  - String
                Configuration: Json
                InputArtifacts:
                  - Name: String
                Name: String
                Region: String
                RoleArn: String
                RuleTypeId:
                  Category: String
                  Owner: String
                  Provider: String
                  Version: String
        Result: String
        RetryConfiguration:
          RetryMode: String
      OnSuccess:
        Conditions:
          - Condition
            Result: String
            Rules:
              -
                Commands:
                  - String
                Configuration: Json
                InputArtifacts:
                  - Name: String
                Name: String
                Region: String
                RoleArn: String
                RuleTypeId:
                  Category: String
                  Owner: String
                  Provider: String
                  Version: String
  ArtifactStore:
    Location: String
    Type: String
    EncryptionKey:
      Id: String
      Type: String
  ArtifactStores:
    - Region: String
      ArtifactStore:
        Location: String
        Type: String
        EncryptionKey:
          Id: String
          Type: String
  DisableInboundStageTransitions:
    - Reason: String
      StageName: String
  ExecutionMode: String
  Name: String
  PipelineType: String
  RestartExecutionOnUpdate: Boolean
  Tags:
    - Key: String
      Value: String
  Triggers:
    - ProviderType: String
      GitConfiguration:
        SourceActionName: String
        PullRequest:
          -
            Branches:
              Excludes:
                - String
              Includes:
                - String
            Events:
              - String
            FilePaths:
              Excludes:
                - String
              Includes:
                - String
        Push:
          -
            Branches:
              Excludes:
                - String
              Includes:
                - String
            FilePaths:
              Excludes:
                - String
              Includes:
                - String
            Tags:
              Excludes:
                - String
              Includes:
                - String

  Variables:
    - Name: String
      DefaultValue: String
      Description: String
#}