---
Description: {{sceptre_user_data.description|default('Lambda Function(s) for '+sceptre_user_data.project_code)}}
AWSTemplateFormatVersion: "2010-09-09"

Resources:
{%- for function in sceptre_user_data.functions %}
{%- set function_name = function.name %}
  {{ function_name }}:
    Type: AWS::Lambda::Function
    DeletionPolicy: {{ function.deletion_policy | default('Delete') }}
    UpdateReplacePolicy: {{ function.update_replace_policy | default('Delete') }}
    Properties:
      Code:
{%- if function.code.image_uri is defined %}
        ImageUri: {{ function.code.image_uri }}
{%- endif %}
{%- if function.code.s3_bucket is defined %}
        S3Bucket: {{ function.code.s3_bucket }}
{%- endif %}
{%- if function.code.s3_key is defined %}
        S3Key: {{ function.code.s3_key }}
{%- endif %}
{%- if function.code.s3_object_version is defined %}
        S3ObjectVersion: {{ function.code.s3_object_version }}
{%- endif %}
{%- if function.code.source_kms_key_arn is defined %}
        SourceKMSKeyArn: {{ function.code.source_kms_key_arn | trim }}
{%- endif %}
{%- if function.code.zip_file is defined %}
        ZipFile: |
{{ function.code.zip_file | indent(width=10, first=true) }}
{%- endif %}
      Role: {{ function.role }}
{%- if function.architectures is defined %}
      Architectures:
{%- for architecture in function.architectures %}
        - {{architecture}}
{%- endfor %}
{%- endif %}
{%- if function.code_signing_config_arn is defined %}
      CodeSigningConfigArn: {{ function.code_signing_config_arn }}
{%- endif %}
{%- if function.dead_letter_config is defined %}
      DeadLetterConfig:
        TargetArn: {{ function.dead_letter_config.target_arn | trim }}
{%- endif %}
{%- if function.description is defined %}
      Description: {{ function.description }}
{%- endif %}
{%- if function.environment is defined %}
      Environment:
        Variables:
{%- for key, value in function.environment.variables.items() %}
          {{ key }}: {{ value }}
{%- endfor %}
{%- endif %}
{%- if function.ephemeral_storage is defined %}
      EphemeralStorage:
        Size: {{ function.ephemeral_storage.size }}
{%- endif %}
{%- if function.file_system_configs is defined %}
      FileSystemConfigs:
{%- for file_system_config in function.file_system_configs %}
        - Arn: {{ file_system_config.arn | trim }}
          LocalMountPath: {{ file_system_config.local_mounth_path }}
{%- endfor %}
{%- endif %}
{%- if function.function_name is defined %}
      FunctionName: {{ function.function_name }}
{%- endif %}
{%- if function.handler is defined %}
      Handler: {{ function.handler }}
{%- endif %}
{%- if function.image_config is defined %}
      ImageConfig:
{%- if function.image_config.command is defined %}
        Command:
{%- for command in function.image_config.command %}
          - {{ command }}
{%- endfor %}
{%- endif %}
{%- if function.image_config.entry_point is defined %}
        EntryPoint:
{%- for entry_point in function.image_config.entry_point %}
          - {{ entry_point }}
{%- endfor %}
{%- endif %}
{%- if function.image_config.working_directory is defined %}
        WorkingDirectory: {{ function.image_config.working_directory }}
{%- endif %}
{%- endif %}
{%- if function.kms_key_arn is defined %}
      KmsKeyArn: {{ function.kms_key_arn | trim }}
{%- endif %}
{%- if function.layers is defined %}
      Layers:
{%- for layer_arn in function.layers %}
        - {{ layer_arn | trim }}
{%- endfor %}
{%- endif %}
{%- if function.logging_config is defined %}
      LoggingConfig:
{%- if function.logging_config.application_log_level is defined %}
        ApplicationLogLevel: {{ function.logging_config.application_log_level }}
{%- endif %}
{%- if function.logging_config.log_format is defined %}
        LogFormat: {{ function.logging_config.log_format }}
{%- endif %}
{%- if function.logging_config.log_group is defined %}
        LogGroup: {{ function.logging_config.log_group }}
{%- endif %}
{%- if function.logging_config.system_log_level is defined %}
        SystemLogLevel: {{ function.logging_config.system_log_level }}
{%- endif %}
{%- endif %}
{%- if function.memory_size is defined %}
      MemorySize: {{ function.memory_size }}
{%- endif %}
{%- if function.package_type is defined %}
      PackageType: {{ function.package_type }}
{%- endif %}
{%- if function.recursive_loop is defined %}
      RecursiveLoop: {{ function.recursive_loop }}
{%- endif %}
{%- if function.reserved_concurrent_execution is defined %}
      ReservedConcurrentExecutions: {{ function.reserved_concurrent_execution }}
{%- endif %}
{%- if function.runtime is defined %}
      Runtime: {{ function.runtime }}
{%- endif %}
{%- if function.runtime_management_config is defined %}
      RuntimeManagementConfig:
        UpdateRuntimeOn: {{ function.runtime_management_config.update_runtime_on }}
{%- if function.runtime_management_config.runtime_version_arn is defined %}
        RuntimeVersionArn: {{ function.runtime_management_config.runtime_version_arn | trim }}
{%- endif %}
{%- endif %}
{%- if function.snap_start is defined %}
      SnapStart:
        ApplyOn: {{ function.snap_start.apply_on }}
{%- endif %}
{%- if function.timeout is defined %}
      Timeout: {{ function.timeout }}
{%- endif %}
{%- if function.tracing_config is defined %}
      TracingConfig:
        Mode: {{ function.tracing_config.mode }}
{%- endif %}
{%- if function.vpc_config is defined %}
      VpcConfig:
{%- if function.vpc_config.ipv6_allowed_for_dual_stack is defined %}
        Ipv6AllowedForDualStack: {{ function.vpc_config.ipv6_allowed_for_dual_stack }}
{%- endif %}
{%- if function.vpc_config.security_group_ids is defined %}
        SecurityGroupIds:
{%- for security_group_id in function.vpc_config.security_group_ids %}
          - {{ security_group_id | trim }}
{%- endfor %}
{%- endif %}
{%- if function.vpc_config.subnet_ids is defined %}
        SubnetIds:
{%- for subnet_id in function.vpc_config.subnet_ids %}
          - {{ subnet_id | trim }}
{%- endfor %}
{%- endif %}
{%- endif %}
      Tags:
        - Key: SourceRepoURL
          Value: {{ sceptre_user_data.source_repo_url | default('unknown') }}
{%- if function.tags is defined %}
{%- for key,value in function.tags.items() %}
        - Key: {{ key }}
          Value: {{ value }}
{%- endfor %}
{%- endif %}
{%- endfor %}

Outputs:

{%- for function in sceptre_user_data.functions %}
{%- set function_name = function.name %}
  {{ function_name }}:
    Description: Lambda Function Name for {{ function_name }}
    Value:
      Ref: {{ function_name }}
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}-{{ function_name }}"

  {{ function_name }}Arn:
    Description: The ARN for {{ function_name }}
    Value:
      Fn::GetAtt:
        - {{ function_name }}
        - Arn
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}-{{ function_name }}-Arn"

{%- endfor %}
{#
# Current supported structure as of 2024/10/26:
Type: AWS::Lambda::Function
Properties:
  Architectures:
    - String
  Code:
    ImageUri: String
    S3Bucket: String
    S3Key: String
    S3ObjectVersion: String
    SourceKMSKeyArn: String
    ZipFile: String
  CodeSigningConfigArn: String
  DeadLetterConfig:
    TargetArn: String
  Description: String
  Environment:
    Variables:
      Key: Value
  EphemeralStorage:
    Size: Integer
  FileSystemConfigs:
    -
      Arn: String
      LocalMountPath: String
  FunctionName: String
  Handler: String
  ImageConfig:
    Command:
      - String
    EntryPoint:
      - String
    WorkingDirectory: String
  KmsKeyArn: String
  Layers:
    - String
  LoggingConfig:
    ApplicationLogLevel: String
    LogFormat: String
    LogGroup: String
    SystemLogLevel: String
  MemorySize: Integer
  PackageType: String
  RecursiveLoop: String
  ReservedConcurrentExecutions: Integer
  Role: String
  Runtime: String
  RuntimeManagementConfig:
    RuntimeVersionArn: String
    UpdateRuntimeOn: String
  SnapStart:
    ApplyOn: String
  Tags:
    -
      Key: String
      Value: String
  Timeout: Integer
  TracingConfig:
    Mode: String
  VpcConfig:
    Ipv6AllowedForDualStack: Boolean
    SecurityGroupIds:
      - String
    SubnetIds:
      - String
#}